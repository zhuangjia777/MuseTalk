启动本项目环境
```cmd
conda activate ./my_env
```

python app.py --use_float16 --ffmpeg_path ffmpeg-master-latest-win64-gpl-shared\bin


注意
1. 如果没有项目中没有my_env文件夹，先创建独立环境
```cmd
conda env create -p ./my_env -f environment-windows.yml
```

2. 如果没有安装conda，从https://repo.anaconda.com/miniconda/ 下载Miniconda3-latest-Windows-x86_64.exe

3. 如果建独立环境失败，清理conda缓存
```cmd
conda clean --all --yes
```

4. 如果environment.yml更新，更新my_env环境命令
```cmd
conda env update --file environment-windows.yml --name my_env
```

5. 安装torch, 必须从按cuda版本11.8或12.9中二选一，因为mmcv只支持这两个版本的硬件加速
pip install torch torchvision torchaudio xformers --extra-index-url https://download.pytorch.org/whl/cu118
pip install torch torchvision torchaudio xformers --extra-index-url https://download.pytorch.org/whl/cu129

用cuda12.9对应的torch时，修改musetalk/utils/preprocessing.py，在加载库的代码后添加：
```python
# Alternative fix: Temporarily patch torch.load
original_torch_load = torch.load
def patched_torch_load(*args, **kwargs):
    if 'weights_only' not in kwargs:
        kwargs['weights_only'] = False
    return original_torch_load(*args, **kwargs)

torch.load = patched_torch_load
```

6. 安装公共依赖
pip install -r requirements.txt
pip install --no-cache-dir -U openmim 
mim install mmengine 
mim install "mmcv>=2.0.1" 
mim install "mmdet>=3.1.0" 
mim install "mmpose>=1.1.0" 
